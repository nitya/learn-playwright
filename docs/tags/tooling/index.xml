<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tooling on Learn Playwright</title>
    <link>https://nitya.github.io/learn-playwright/tags/tooling/</link>
    <description>Recent content in tooling on Learn Playwright</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Dec 2021 17:48:15 -0500</lastBuildDate><atom:link href="https://nitya.github.io/learn-playwright/tags/tooling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>#006 - Tool Talk: Hello, Codegen</title>
      <link>https://nitya.github.io/learn-playwright/006-codegen/</link>
      <pubDate>Wed, 22 Dec 2021 17:48:15 -0500</pubDate>
      
      <guid>https://nitya.github.io/learn-playwright/006-codegen/</guid>
      <description>Welcome to Day 6 of #30DaysOfPlaywright!!
  Today&amp;rsquo;s Resources  Command Line - Playwright CLI commands and options Test Generator - Generate test scripts from user actions Recording Videos - Capture video walkthrough for post-mortem Capturing Screenshots - Capture page screenshot for post-mortem Emulating Devices - Test for mobile web, browser contexts Test Fixtures - Create isolated browser environment for test Locators - View to selector-matched elements in page Auto-Wait - Make navigation more reliable (without timeout)  Today&amp;rsquo;s Objectives In our last post we continued the series of &amp;ldquo;Tool Talk&amp;rdquo; posts by looking at the Playwright Command Line tools and options.</description>
    </item>
    
    <item>
      <title>#005 - Tool Talk: Hello, Command Line</title>
      <link>https://nitya.github.io/learn-playwright/005-command-line/</link>
      <pubDate>Mon, 20 Dec 2021 09:56:45 -0500</pubDate>
      
      <guid>https://nitya.github.io/learn-playwright/005-command-line/</guid>
      <description>Welcome to Day 5 of #30DaysOfPlaywright!!
 I&amp;rsquo;m back after a short break - let&amp;rsquo;s continue the #30DaysOfPlaywright journey!!
1. ðŸ“£ #Playwright on dev.to I&amp;rsquo;ve been publishing the #30DaysofPlaywright series on the dev.to platform. And I&amp;rsquo;m excited to say that I am now also moderating the #playwright tag there. Follow it for new posts from me and the community!
Woot! @ThePracticalDev #Playwright tag profile page just got a makeover with links and context - if you have written content about @playwrightweb do consider publishing it to https://t.</description>
    </item>
    
    <item>
      <title>#004 - Tool Talk: Hello, Trace Viewer</title>
      <link>https://nitya.github.io/learn-playwright/004-trace-viewer/</link>
      <pubDate>Thu, 09 Dec 2021 14:09:45 -0500</pubDate>
      
      <guid>https://nitya.github.io/learn-playwright/004-trace-viewer/</guid>
      <description>Welcome to Day 4 of #30DaysOfPlaywright!!
 In our last post we looked at how to setup a demo app as a real-world testbed for Playwright. See the source code and visit the running site for reference.
Today, we&amp;rsquo;ll kick off a series of &amp;ldquo;Tool Talk&amp;rdquo; blog posts that use this app as a sandbox to learn about the authoring, debugging, profiling, and command-line, tools provided by the Playwright framework.</description>
    </item>
    
  </channel>
</rss>
