<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Let&#39;s Learn: Playwright on Learn Playwright</title>
    <link>https://nitya.github.io/learn-playwright/</link>
    <description>Recent content in Let&#39;s Learn: Playwright on Learn Playwright</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nitya.github.io/learn-playwright/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>#004 - Tool Talk: Hello, Trace Viewer</title>
      <link>https://nitya.github.io/learn-playwright/004-trace-viewer/</link>
      <pubDate>Thu, 09 Dec 2021 14:09:45 -0500</pubDate>
      
      <guid>https://nitya.github.io/learn-playwright/004-trace-viewer/</guid>
      <description>Welcome to Day 4 of #30DaysOfPlaywright!!
 In our last post we looked at how to setup a demo app as a real-world testbed for Playwright. See the source code and visit the running site for reference.
Today, we&amp;rsquo;ll kick off a series of &amp;ldquo;Tool Talk&amp;rdquo; blog posts that use this app as a sandbox to learn about the authoring, debugging, profiling, and command-line, tools provided by the Playwright framework.</description>
    </item>
    
    <item>
      <title>#003 - Playwright ‚ô•Ô∏è Azure Static Web Apps</title>
      <link>https://nitya.github.io/learn-playwright/003-aswa-demo-app/</link>
      <pubDate>Tue, 07 Dec 2021 14:39:33 -0500</pubDate>
      
      <guid>https://nitya.github.io/learn-playwright/003-aswa-demo-app/</guid>
      <description>Welcome to Day 3 of #30DaysOfPlaywright!!
 Alright - so I got through the Getting Started tutorial and have the [Playwright Test] runner setup on my local environment. Where to next?
 About Azure Static Web Apps My original goal was to explore Playwright Test tools in Playwright, and dive deeper into command-line, authoring and debugging support in more detail. But it occured to me that doing this with a somewhat realistic app as an experiment sandbox, might make more sense.</description>
    </item>
    
    <item>
      <title>#002 - Getting Started (Part 2)</title>
      <link>https://nitya.github.io/learn-playwright/002-getting-started-testing/</link>
      <pubDate>Fri, 03 Dec 2021 15:46:09 -0500</pubDate>
      
      <guid>https://nitya.github.io/learn-playwright/002-getting-started-testing/</guid>
      <description>Welcome to Day 2 of #30DaysOfPlaywright!!
 Our Day 1 exploration of Playwright helped us setup and validate our local testing envrionment. Today we&amp;rsquo;ll complete the tutorial by reviewing fundamental Playwright concepts namely:
 Writing assertions - to test if an expect-ed behavior holds true. Using test fixtures - to set desired page/browser context for test run. Using test hooks - to setup and tear down resources between tests.  We&amp;rsquo;ll quickly go over what each does and why we need them - and revisit each topic for a deeper dive in a future post.</description>
    </item>
    
    <item>
      <title>#001 - Getting Started (Part 1)</title>
      <link>https://nitya.github.io/learn-playwright/001-getting-started-setup/</link>
      <pubDate>Thu, 02 Dec 2021 16:21:13 -0500</pubDate>
      
      <guid>https://nitya.github.io/learn-playwright/001-getting-started-setup/</guid>
      <description>Welcome to Day 1 of #30DaysOfPlaywright!!
 Today&amp;rsquo;s goal is to make progress on the Getting Started tutorial which should get us set up with the Playwright Test runner in our local development environment - and get us configured to do our first test run.
There&amp;rsquo;s a lot covered in there, so I&amp;rsquo;ve decided to break this into multiple parts.
  Part 1: - Install the Playwright Test runner and validate setup by completing your first test run with the sample test script.</description>
    </item>
    
    <item>
      <title>Hello, #30DaysOfPlaywright</title>
      <link>https://nitya.github.io/learn-playwright/000-hello-30days/</link>
      <pubDate>Wed, 01 Dec 2021 10:22:54 -0500</pubDate>
      
      <guid>https://nitya.github.io/learn-playwright/000-hello-30days/</guid>
      <description>Let&amp;rsquo;s Learn About Testing! It&amp;rsquo;s December 1! The new year is just over 30 days away so it&amp;rsquo;s the perfect time to make a learning resolution, get started on it now - and then check it off the very first day of the New Year! So what do you want to learn this year?
I&amp;rsquo;ve decided to invest this month exploring a topic that fascinates me - end-to-end testing for modern web apps.</description>
    </item>
    
    <item>
      <title>About This Project</title>
      <link>https://nitya.github.io/learn-playwright/about/</link>
      <pubDate>Wed, 17 Nov 2021 10:38:00 -0400</pubDate>
      
      <guid>https://nitya.github.io/learn-playwright/about/</guid>
      <description>Hello - I&amp;rsquo;m Nitya! üëãüèΩ
This blog documents my learning journey into all things related to cross-browser testing, test automation and end-to-end testing for web and multi-platform apps using the Playwright framework and tooling ecosystem.
I&amp;rsquo;m kicking things off in Dec 2021 with a #30DaysOfPlaywright content series where I&amp;rsquo;ll everything from core testing concepts, to Playwright tools, APIs &amp;amp; best practices for end-to-end testing of modern web applications.
Join me!</description>
    </item>
    
  </channel>
</rss>
